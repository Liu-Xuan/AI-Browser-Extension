<?xml version="1.0" encoding="UTF-8"?>
<framework>
    <name>AI Browser Extension</name>
    <version>1.0</version>
    <description>智能文本处理助手 - 提供翻译、摘要、问答功能</description>
    
    <structure>
        <directory name="server" description="后端服务">
            <directory name="app" description="应用主目录">
                <file name="main.py" description="FastAPI 应用入口，定义 API 路由和数据模型" status="已实现"/>
            </directory>
            
            <directory name="services" description="业务服务层">
                <file name="translator.py" description="翻译服务" status="已实现"/>
                <file name="summarizer.py" description="摘要生成服务" status="已实现"/>
                <file name="qa.py" description="问答服务" status="已实现"/>
                <file name="chat.py" description="聊天服务" status="已实现"/>
                <file name="knowledge.py" description="知识库管理服务 - 使用 RAGFlow API" status="已实现"/>
            </directory>
            
            <directory name="utils" description="工具类">
                <file name="llm_wrapper.py" description="LLM 调用封装" status="已实现"/>
                <file name="text_processor.py" description="文本处理工具" status="已实现"/>
                <file name="vector_store.py" description="向量存储工具" status="待实现"/>
            </directory>
            
            <file name="Dockerfile" description="Docker 构建文件" status="已实现"/>
            <file name="requirements.txt" description="Python 依赖清单" status="已实现"/>
        </directory>

        <directory name="extension" description="浏览器扩展">
            <directory name="core" description="核心功能模块">
                <file name="api.js" description="API 客户端，处理与后端服务的通信" status="已实现"/>
                <file name="background.js" description="后台服务，处理扩展的主要逻辑" status="已实现"/>
                <file name="content-script.js" description="内容脚本，处理页面交互" status="已实现"/>
            </directory>

            <directory name="ui" description="用户界面模块">
                <file name="popup.html" description="扩展弹出窗口的 HTML" status="已实现"/>
                <file name="popup.js" description="扩展弹出窗口的脚本" status="已实现"/>
                <file name="sidepanel.html" description="侧边栏的 HTML" status="已实现"/>
                <file name="sidepanel.js" description="侧边栏的脚本" status="已实现"/>
                <file name="styles.css" description="全局样式表" status="已实现"/>
                
                <directory name="tools" description="工具组件">
                    <directory name="pdf" description="PDF 工具">
                        <file name="ui.js" description="PDF 工具界面" status="已实现"/>
                        <file name="parser.js" description="PDF 解析器" status="已实现"/>
                    </directory>
                </directory>
            </directory>

            <directory name="assets" description="静态资源">
                <directory name="icons" description="图标文件">
                    <file name="icon16.png" description="16x16 图标" status="已实现"/>
                    <file name="icon48.png" description="48x48 图标" status="已实现"/>
                    <file name="icon128.png" description="128x128 图标" status="已实现"/>
                </directory>
            </directory>

            <file name="manifest.json" description="扩展清单文件" status="已实现"/>
        </directory>
    </structure>

    <features>
        <feature name="智能助手" status="已实现">
            <component name="翻译功能" status="已实现">
                <endpoint path="/api/v1/translate" method="POST"/>
            </component>
            <component name="摘要生成" status="已实现">
                <endpoint path="/api/v1/summarize" method="POST"/>
            </component>
            <component name="智能问答" status="已实现">
                <endpoint path="/api/v1/chat" method="POST"/>
            </component>
        </feature>
        
        <feature name="知识库管理" status="已实现">
            <component name="知识库操作" status="已实现">
                <description>使用 RAGFlow API 进行知识库管理</description>
                <endpoint path="/api/v1/datasets" method="GET" description="获取知识库列表"/>
                <endpoint path="/api/v1/datasets" method="POST" description="创建知识库"/>
                <endpoint path="/api/v1/datasets/{id}" method="DELETE" description="删除知识库"/>
                <endpoint path="/api/v1/datasets/{id}" method="PUT" description="更新知识库"/>
            </component>
            <component name="文档管理" status="已实现">
                <description>使用 RAGFlow API 进行文档管理</description>
                <endpoint path="/api/v1/datasets/{id}/documents" method="GET" description="获取文档列表"/>
                <endpoint path="/api/v1/datasets/{id}/documents" method="POST" description="上传文档"/>
                <endpoint path="/api/v1/datasets/{id}/documents" method="DELETE" description="删除文档"/>
                <endpoint path="/api/v1/datasets/{id}/documents/{doc_id}" method="PUT" description="更新文档"/>
                <endpoint path="/api/v1/datasets/{id}/chunks" method="POST" description="解析文档"/>
                <endpoint path="/api/v1/datasets/{id}/chunks" method="DELETE" description="停止解析"/>
            </component>
            <component name="检索服务" status="已实现">
                <description>使用 RAGFlow API 进行文档检索</description>
                <endpoint path="/api/v1/retrieval" method="POST" description="检索知识库内容"/>
            </component>
        </feature>
        
        <feature name="工具箱" status="部分实现">
            <component name="PDF 工具" status="已实现">
                <function name="PDF 解析" status="已实现"/>
                <function name="文本提取" status="已实现"/>
            </component>
        </feature>
    </features>

    <api-endpoints>
        <endpoint path="/api/v1/translate" method="POST" description="文本翻译" status="已实现"/>
        <endpoint path="/api/v1/summarize" method="POST" description="生成摘要" status="已实现"/>
        <endpoint path="/api/v1/chat" method="POST" description="智能对话" status="已实现"/>
        <endpoint path="/api/v1/datasets" method="GET" description="获取知识库列表" status="已实现"/>
        <endpoint path="/api/v1/datasets" method="POST" description="创建知识库" status="已实现"/>
        <endpoint path="/api/v1/datasets/{id}" method="DELETE" description="删除知识库" status="已实现"/>
        <endpoint path="/api/v1/datasets/{id}/documents" method="GET" description="获取文档列表" status="已实现"/>
        <endpoint path="/api/v1/datasets/{id}/documents" method="POST" description="添加文档" status="已实现"/>
        <endpoint path="/api/v1/datasets/{id}/documents" method="DELETE" description="删除文档" status="已实现"/>
    </api-endpoints>

    <deployment>
        <component name="后端服务">
            <file name="docker-compose.yml" description="Docker 编排配置"/>
            <environment name="开发环境">
                <host>localhost</host>
                <port>8000</port>
            </environment>
        </component>
        <component name="浏览器扩展">
            <platform name="Chrome" min_version="88"/>
            <permissions>
                <permission name="activeTab" description="访问当前标签页"/>
                <permission name="storage" description="存储数据"/>
                <permission name="contextMenus" description="右键菜单"/>
                <permission name="sidePanel" description="侧边栏"/>
                <permission name="scripting" description="执行脚本"/>
            </permissions>
        </component>
    </deployment>

    <configuration>
        <config_files>
            <file path="server/.env">
                环境变量配置文件，包含敏感信息（API密钥等），不提交到代码仓库
            </file>
            <file path="server/.env.example">
                环境变量模板文件，提供配置示例，可提交到代码仓库
            </file>
            <file path="server/config.py">
                配置管理类，使用 pydantic_settings 处理环境变量
                - 支持类型检查
                - 支持默认值
                - 支持环境变量覆盖
            </file>
        </config_files>
        
        <config_flow>
            <step>1. 从 .env 文件加载环境变量</step>
            <step>2. Settings 类读取并验证环境变量</step>
            <step>3. LLMWrapper 初始化时获取配置</step>
        </config_flow>
        
        <ragflow_integration>
            <server>
                <url>http://172.19.12.146:8888</url>
                <api_key>ragflow-RkOWJjM2ZhZDFhZTExZWZhYmRmMDI0Mm</api_key>
            </server>

            <features>
                <datasets>
                    <operations>
                        - 创建/删除/更新知识库
                        - 获取知识库列表
                        - 配置知识库参数
                    </operations>
                    <parameters>
                        - name: 知识库名称
                        - description: 知识库描述
                        - embedding_model: 向量模型
                        - chunk_method: 分块方法
                        - parser_config: 解析配置
                    </parameters>
                </datasets>

                <documents>
                    <operations>
                        - 上传/删除/更新文档
                        - 获取文档列表
                        - 解析文档内容
                    </operations>
                    <parameters>
                        - chunk_method: 分块方法
                        - parser_config: 解析配置
                    </parameters>
                </documents>

                <retrieval>
                    <operations>
                        - 语义检索
                        - 关键词检索
                    </operations>
                    <parameters>
                        - similarity_threshold: 相似度阈值
                        - vector_similarity_weight: 向量相似度权重
                        - top_k: 返回结果数量
                    </parameters>
                </retrieval>
            </features>

            <error_handling>
                <strategies>
                    - API 超时设置（默认 30 秒）
                    - 网络错误重试机制
                    - 详细的错误日志记录
                    - 用户友好的错误提示
                </strategies>
                <common_issues>
                    - 认证失败：检查 API Key
                    - 网络超时：检查连接
                    - 参数错误：验证请求参数
                    - 服务不可用：检查服务状态
                </common_issues>
            </error_handling>
        </ragflow_integration>
    </configuration>
</framework> 